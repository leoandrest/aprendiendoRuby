Tipos de datos I: Integer, float.
Las variables son espacios reservados en la memoria que, como su nombre indica, pueden 
cambiar de contenido a lo largo de la ejecución de un programa.

Para declarar una variable escribimos el nombre de la variable, utilizar 
el operador igual “”="" y luego el valor que será asignado a esa variable.

Existen diferentes tipos de datos: el Integer o entero que puede representar 
un subconjunto finito de los números enteros y el Float o real que es la representación 
de un real estándar.

Variables

Deben empezar con un letra minúscula o un guión bajo (_), se recomienda el uso de la convención 
“snake_case” con el fin de identificarlas fácilmente y no puede contener palabras reservadas 
del lenguaje.
Cuando Ruby encuentra una palabra decide qué es de la siguiente forma:
Primero, si hay un signo de igualdad (=) a la derecha de la palabra, es una variable 
local a la que se le asigna un valor.
Identifica si es una palabra reservada del lenguaje y de ser así cumplirá su función.
Si no se cumple ninguno de los anteriores casos, Ruby asume que es un método.
Cuando se hace referencia a una variable local sin inicializar, se interpreta como una 
llamada a un método que no tiene argumentos.

# Ejecuta estas líneas en `irb` para ver el resultado de cada instrucción

# Integers y floats

# Operadores
x = 4 + 5 - 1
y = x * 20 / 5
z = 5%2
9%3
pi = 3.14
2 < 3
2 ** 8

# Métodos utilitarios
2.even?
x.odd?
(2 ** 8).digits
(2 ** 8).digits.reverse
2 ** 5000

# Inspeccionamos el tipo o la clase de las variables `x` y `pi` y sus métodos
x.class
pi.class

x.methods
pi.methods

x.class.ancestors
pi.class.ancestors
1.0.class
(1 + 3.14).class

4.is_a? Integer
4.is_a? Numeric
4.is_a? Float